-- Services & Variables
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local TweenService = game:GetService("TweenService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local StarterGui = game:GetService("StarterGui")
local EndDecision = ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("EndDecision")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local root = character:WaitForChild("HumanoidRootPart")

local autoFarmBond = false
local CollectBond = false
local started = false
local tweenSpeed = 1000
local currentIndex = 1
local collectDelay = 0.01
local lastCollectTime = 0
local startTime = 0
local elapsedTime = 0
local counting = false

local gunCFrame = CFrame.new(
    350.500061, 50.8906364, -9100.78516,
    -0.905841053, -0.0674131364, -0.418219507,
     0.0113797104,  0.983027875, -0.183102921,
     0.423464984, -0.170621336, -0.889699876
)
local rangeMaxGun = 200

local bondPoints = {
    CFrame.new(-475.66, 200.77, 21969.36),
    CFrame.new(-319.90, 200.77, 14036.94),
    CFrame.new(-15.96, 200.77, 6099.45),
    CFrame.new(-615.17, 200.77, -1836.15),
    CFrame.new(249.76, 200.77, -9067.68),
    CFrame.new(-138.72, 200.77, -17713.91),
    CFrame.new(249.76, 200.77, -9067.68),
    CFrame.new(228.526764, 200.77, 5163.45557),
    CFrame.new(-860.029114, 200.77, -27428.8184),
    CFrame.new(10.24, 200.77, -33604.30),
    CFrame.new(-322.95, 200.77, -41545.23),
    CFrame.new(-384.791534, 40, -48746.832),
    CFrame.new(-379.982697, 3, -49471.2695),
    CFrame.new(-380.45, -23, -49332.89),
}

-- Notification helper
local function notify(text)
    StarterGui:SetCore("SendNotification", {
        Title = "Notification",
        Text = text,
        Icon = "rbxassetid://99581962287910",
        Duration = 5
    })
end

-- Teleport & Tween
local function teleportTo(cf)
    root.Anchored = true
    root.CFrame = cf
    task.wait(3)
    root.Anchored = false
end

local function tweenTo(cf)
    local distance = (root.Position - cf.Position).Magnitude
    local duration = distance / tweenSpeed
    local tweenInfo = TweenInfo.new(duration, Enum.EasingStyle.Linear)
    local tween = TweenService:Create(root, tweenInfo, { CFrame = cf })

    local success, err = pcall(function()
        tween:Play()
        task.wait(duration)
    end)

    if not success then
        warn("Tween error:", err)
    end
end

-- Gun setup
local function getLockedGun()
    local runtime = Workspace:FindFirstChild("RuntimeItems")
    if not runtime then return nil end

    for _, v in ipairs(runtime:GetChildren()) do
        if v:IsA("Model") and v.Name == "MaximGun" then
            local dist = (v:GetPivot().Position - gunCFrame.Position).Magnitude
            if dist <= rangeMaxGun then
                return v
            end
        end
    end

    return nil
end

local function sitInGun()
    local gun = getLockedGun()
    local seat = gun and gun:FindFirstChild("VehicleSeat")
    if seat and seat:IsA("VehicleSeat") then
        if seat.Disabled then seat.Disabled = false end
        teleportTo(seat.CFrame)
        return true
    end
    return false
end

local function jumpOff()
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    if humanoid then
        humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    end
end

local function freezeMidAir()
    local freezePos = root.Position + Vector3.new(0, 5, 0)
    root.Anchored = true
    root.CFrame = CFrame.new(freezePos)
    task.wait(1)
    root.Anchored = false
end

local function tryTweenToBond()
    local runtime = Workspace:FindFirstChild("RuntimeItems")
    if runtime then
        for _, v in ipairs(runtime:GetChildren()) do
            if v:IsA("Model") and v.Name == "Bond" then
                local bondPos = v:GetPivot().Position
                local distance = (root.Position - bondPos).Magnitude
                if distance <= 100000 then
                    tweenTo(CFrame.new(bondPos + Vector3.new(0, 4, 0)))
                    return true
                end
            end
        end
    end
    return false
end

local function setupGun()
    teleportTo(gunCFrame)
    if sitInGun() then
        task.wait(0.6)
        jumpOff()
        freezeMidAir()
        task.wait(0.5)
        sitInGun()
        task.wait(0.1)
    end
end

-- Collect bonds automatically
RunService.Heartbeat:Connect(function()
    if CollectBond and tick() - lastCollectTime >= collectDelay then
        lastCollectTime = tick()

        for _, bond in ipairs(Workspace:GetDescendants()) do
            if bond:IsA("Model") and bond.Name == "Bond" then
                pcall(function()
                    ReplicatedStorage
                        :WaitForChild("Shared")
                        :WaitForChild("Network")
                        :WaitForChild("RemotePromise")
                        :WaitForChild("Remotes")
                        :WaitForChild("C_ActivateObject")
                        :FireServer(bond)
                end)
            end
        end
    end
end)

-- Timer formatting
local function formatTime(seconds)
    local mins = math.floor(seconds / 60)
    local secs = seconds % 60
    return string.format("%02d:%02d", mins, secs)
end

-- Timer display loop (optional debug)
task.spawn(function()
    while true do
        task.wait(1)
        if counting then
            elapsedTime = math.floor(tick() - startTime)
            -- notify("Time running: " .. formatTime(elapsedTime)) -- Uncomment if you want notifications every second
        end
    end
end)

-- Finish farming
local function finishFarm()
    autoFarmBond = false
    CollectBond = false
    started = false
    counting = false

    local humanoid = character:FindFirstChildOfClass("Humanoid")
    if humanoid then
        humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    end
end

-- Farming loop
local function searchBondPoints()
    if not autoFarmBond then return end
    if currentIndex > #bondPoints then
        finishFarm()
        return
    end

    local cf = bondPoints[currentIndex]

    if tryTweenToBond() then return end
    teleportTo(cf)
    currentIndex += 1
end

task.spawn(function()
    while task.wait(0.3) do
        if autoFarmBond then
            if not started then
                setupGun()
                started = true
                startTime = tick()
                counting = true
            else
                searchBondPoints()
            end
        end
    end
end)

-- Force end loop (safety)
task.spawn(function()
    while true do
        EndDecision:FireServer(false)
        task.wait(0.5)
    end
end)
